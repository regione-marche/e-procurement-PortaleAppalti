<!DOCTYPE validators PUBLIC
        "-//OpenSymphony Group//XWork Validator 1.0.2//EN"
        "http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd">

<validators>
	
	<field name="soggettoQualifica">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 ||
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ soggettoQualifica.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="dataInizioIncarico">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 ||
			responsabileDichiarazioni.trim().length() > 0 || 
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ dataInizioIncarico.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9]{2}/[0-9]{2}/(19|20)[0-9]{2}]]></param>
			<message key="localstrings.wrongDate" />
		</field-validator>
		<field-validator type="dateItaly">
			<message key="localstrings.wrongDate" />
		</field-validator>
	</field>

	<field name="dataFineIncarico">
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9]{2}/[0-9]{2}/(19|20)[0-9]{2}]]></param>
			<message key="localstrings.wrongDate" />
		</field-validator>
		<field-validator type="dateItaly">
			<message key="localstrings.wrongDate" />
		</field-validator>
	</field>

	<field name="responsabileDichiarazioni">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ responsabileDichiarazioni.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="cognome">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ cognome.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="nome">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ nome.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="comuneNascita">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ comuneNascita.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="dataNascita">
		<field-validator  type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ dataNascita.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9]{2}/[0-9]{2}/(19|20)[0-9]{2}]]></param>
			<message key="localstrings.wrongDate" />
		</field-validator>
		<field-validator type="dateItaly">
			<message key="localstrings.wrongDate" />
		</field-validator>
	</field>
	
	<field name="sesso">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 ||
			responsabileDichiarazioni.trim().length() > 0 || 
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ sesso.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="codiceFiscale">
		<field-validator  type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ codiceFiscale.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
		<!-- 
		<field-validator  type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[codiceFiscale.length() == 0 || codiceFiscale.length() == 11 || codiceFiscale.length() == 16]]></param>
			<message key="codfisclength" />
		</field-validator>
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[A-Za-z]{6}[0-9A-Za-z]{2}[ABCDEHLMPRSTabcdehlmprst][0-9A-Za-z]{2}[A-Za-z][0-9A-Za-z]{3}[A-Za-z]]]></param>
			<message key="wrongCharacters" />
		</field-validator>
		 -->
	</field>

	<field name="indirizzo">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ indirizzo.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="numCivico">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ numCivico.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="cap">
		<field-validator  type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0
			) ^ cap.trim().length() > 0) ||
			((cap.trim().length() > 0 && "ITALIA".equals(nazione.trim().toUpperCase())) || 
			 !"ITALIA".equals(nazione.trim().toUpperCase()))
			]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
		<field-validator  type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[
				solaLettura ||
			   (soggettoQualifica.trim().length() == 0 &&
				dataInizioIncarico.trim().length() == 0 && 
				dataFineIncarico.trim().length() == 0 &&
				responsabileDichiarazioni.trim().length() == 0 &&
				cognome.trim().length() == 0 &&
				nome.trim().length() == 0 &&
				titolo.trim().length() == 0 && 
				codiceFiscale.trim().length() == 0 && 
				sesso.trim().length() == 0 &&
				indirizzo.trim().length() == 0 && 
				numCivico.trim().length() == 0 && 
				cap.trim().length() == 0 &&
				comune.trim().length() == 0 && 
				provincia.trim().length() == 0 &&
				dataNascita.trim().length() == 0 &&
				comuneNascita.trim().length() == 0 &&
				provinciaNascita.trim().length() == 0 &&
				tipologiaAlboProf.trim().length() == 0 &&
				numIscrizioneAlboProf.trim().length() == 0 &&
				dataIscrizioneAlboProf.trim().length() == 0 &&
				provinciaIscrizioneAlboProf.trim().length() == 0 &&
				tipologiaCassaPrevidenza.trim().length() == 0 &&
				numMatricolaCassaPrevidenza.trim().length() == 0 &&
				note.trim().length() == 0) 
				||
			   ((soggettoQualifica.trim().length() > 0 ||
				dataInizioIncarico.trim().length() > 0 || 
				dataFineIncarico.trim().length() > 0 || 
				responsabileDichiarazioni.trim().length() > 0 ||
				cognome.trim().length() > 0 || 
				nome.trim().length() > 0 || 
				titolo.trim().length() > 0 || 
				codiceFiscale.trim().length() > 0 || 
				sesso.trim().length() > 0 || 
				indirizzo.trim().length() > 0 || 
				numCivico.trim().length() > 0 || 
				cap.trim().length() > 0 || 
				comune.trim().length() > 0 || 
				provincia.trim().length() > 0 ||
				dataNascita.trim().length() > 0 ||
				comuneNascita.trim().length() > 0 ||
				provinciaNascita.trim().length() > 0 ||
				tipologiaAlboProf.trim().length() > 0 ||
				numIscrizioneAlboProf.trim().length() > 0 ||
				dataIscrizioneAlboProf.trim().length() > 0 ||
				provinciaIscrizioneAlboProf.trim().length() > 0 ||
				tipologiaCassaPrevidenza.trim().length() > 0 ||
				numMatricolaCassaPrevidenza.trim().length() > 0 ||
				note.trim().length() > 0) && 
				((cap.trim().length() == 5 && "ITALIA".equals(nazione.trim().toUpperCase())) || 
				 !"ITALIA".equals(nazione.trim().toUpperCase()))
				)
			]]></param>
			<message key="localstrings.caplength" />
		</field-validator>
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9a-zA-Z]+]]></param>
			<message key="localstrings.wrongCharacters" />
		</field-validator>
		<!-- 
		<field-validator type="stringlength" short-circuit="true">
			<param name="minLength">5</param>
			<param name="maxLength">5</param>
			<message key="localstrings.caplength" />
		</field-validator>
		-->
	</field>

	<field name="comune">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || !((
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0  
			) ^ comune.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="provincia">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || 
			!(provincia.trim().length() > 0 ^ "ITALIA".equals(nazione.trim().toUpperCase())) || 
			!(soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0)]]></param>
			<message key="localstrings.provinciaForNazioneEstera" />
		</field-validator>
	</field>

	<field name="nazione">
		<field-validator  type="fieldexpression">
			<param name="expression"><![CDATA[
			solaLettura || 
			nazione.trim().length() > 0 || !(
			soggettoQualifica.trim().length() > 0 ||
			dataInizioIncarico.trim().length() > 0 || 
			dataFineIncarico.trim().length() > 0 || 
			responsabileDichiarazioni.trim().length() > 0 ||
			cognome.trim().length() > 0 || 
			nome.trim().length() > 0 || 
			titolo.trim().length() > 0 || 
			codiceFiscale.trim().length() > 0 || 
			sesso.trim().length() > 0 || 
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			dataNascita.trim().length() > 0 ||
			comuneNascita.trim().length() > 0 ||
			provinciaNascita.trim().length() > 0 ||
			tipologiaAlboProf.trim().length() > 0 ||
			numIscrizioneAlboProf.trim().length() > 0 ||
			dataIscrizioneAlboProf.trim().length() > 0 ||
			provinciaIscrizioneAlboProf.trim().length() > 0 ||
			tipologiaCassaPrevidenza.trim().length() > 0 ||
			numMatricolaCassaPrevidenza.trim().length() > 0 ||
			note.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="tipologiaAlboProf">
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[!("4-2".equals(soggettoQualifica) && obblIscrizione && tipologiaAlboProf.length() == 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>		
	</field>

	<field name="numIscrizioneAlboProf">
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[!("4-2".equals(soggettoQualifica) && obblIscrizione && numIscrizioneAlboProf.length() == 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>		
	</field>

	<field name="dataIscrizioneAlboProf">
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[!("4-2".equals(soggettoQualifica) && obblIscrizione && dataIscrizioneAlboProf.length() == 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>		
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9]{2}/[0-9]{2}/(19|20)[0-9]{2}]]></param>
			<message key="localstrings.wrongDate" />
		</field-validator>
		<field-validator type="dateItaly">
			<message key="localstrings.wrongDate" />
		</field-validator>
	</field>

	<field name="provinciaIscrizioneAlboProf">
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[!("4-2".equals(soggettoQualifica) && obblIscrizione && provinciaIscrizioneAlboProf.length() == 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>		
	</field>

	<field name="note">
		<field-validator type="stringlength" short-circuit="true">
			<param name="maxLength">2000</param>
			<param name="trim">false</param>
			<message key="localstrings.stringlength" />
		</field-validator>
	</field>

</validators>