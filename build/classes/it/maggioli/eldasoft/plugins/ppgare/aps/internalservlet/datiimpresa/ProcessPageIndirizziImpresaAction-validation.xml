<!DOCTYPE validators PUBLIC
        "-//OpenSymphony Group//XWork Validator 1.0.2//EN"
        "http://www.opensymphony.com/xwork/xwork-validator-1.0.2.dtd">

<validators>

	<field name="tipoIndirizzo">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[!((
			tipoIndirizzo.trim().length() > 0 ||
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			telefono.trim().length() > 0 ||
			fax.trim().length() > 0  
			) ^ tipoIndirizzo.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="indirizzo">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[!((
			tipoIndirizzo.trim().length() > 0 ||
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			telefono.trim().length() > 0 ||
			fax.trim().length() > 0  
			) ^ indirizzo.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="numCivico">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[!((
			tipoIndirizzo.trim().length() > 0 ||
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			telefono.trim().length() > 0 ||
			fax.trim().length() > 0  
			) ^ numCivico.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="cap">
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[!((
			tipoIndirizzo.trim().length() > 0 ||
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			telefono.trim().length() > 0 ||
			fax.trim().length() > 0 
			) ^ cap.trim().length() > 0) ||
			((cap.trim().length() > 0 && "ITALIA".equals(nazione.trim().toUpperCase())) || 
			 !"ITALIA".equals(nazione.trim().toUpperCase()))
			]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
		<field-validator type="fieldexpression" short-circuit="true">
			<param name="expression"><![CDATA[(
			   (tipoIndirizzo.trim().length() == 0 &&
				indirizzo.trim().length() == 0 &&
				numCivico.trim().length() == 0 && 
				cap.trim().length() == 0 &&
				comune.trim().length() == 0 &&
				provincia.trim().length() == 0 &&
				telefono.trim().length() == 0 &&
				fax.trim().length() == 0) 
				|| 
			   ((tipoIndirizzo.trim().length() > 0 ||
				indirizzo.trim().length() > 0 || 
				numCivico.trim().length() > 0 || 
				cap.trim().length() > 0 || 
				comune.trim().length() > 0 || 
				provincia.trim().length() > 0 ||
				telefono.trim().length() > 0 ||
				fax.trim().length() > 0) && 
				((cap.trim().length() == 5 && "ITALIA".equals(nazione.trim().toUpperCase())) || 
				 !"ITALIA".equals(nazione.trim().toUpperCase()))
				)
			)]]></param>
			<message key="localstrings.caplength" />
		</field-validator>
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9a-zA-Z]+]]></param>
			<message key="localstrings.wrongCharacters" />
		</field-validator>
		<!--
		<field-validator type="stringlength" short-circuit="true">
			<param name="minLength">5</param>
			<param name="maxLength">5</param>
			<message key="localstrings.caplength" />
		</field-validator>
		-->
	</field>

	<field name="comune">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[!((
			tipoIndirizzo.trim().length() > 0 ||
			indirizzo.trim().length() > 0 || 
			numCivico.trim().length() > 0 || 
			cap.trim().length() > 0 || 
			comune.trim().length() > 0 || 
			provincia.trim().length() > 0 ||
			telefono.trim().length() > 0 ||
			fax.trim().length() > 0  
			) ^ comune.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<!-- in questo caso si controlla che la provincia sia valorizzata solo se la nazione e' Italia, altrimenti l'intero form (compresa la provincia) deve essere vuoto -->
	<field name="provincia">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[
			!(provincia.trim().length() > 0 ^ "ITALIA".equals(nazione.trim().toUpperCase())) || !(
				tipoIndirizzo.trim().length() > 0 ||
				indirizzo.trim().length() > 0 || 
				numCivico.trim().length() > 0 || 
				cap.trim().length() > 0 || 
				comune.trim().length() > 0 || 
				provincia.trim().length() > 0 ||
				telefono.trim().length() > 0 ||
				fax.trim().length() > 0)
			]]></param>
			<message key="localstrings.provinciaForNazioneEstera" />
		</field-validator>
	</field>

	<!-- in questo caso si controlla che la nazione sia valorizzata oppure che tutti gli altri campi siano vuoti -->
	<field name="nazione">
		<field-validator type="fieldexpression">
			<param name="expression"><![CDATA[
			nazione.trim().length() > 0 || !(
				tipoIndirizzo.trim().length() > 0 ||
				indirizzo.trim().length() > 0 || 
				numCivico.trim().length() > 0 || 
				cap.trim().length() > 0 || 
				comune.trim().length() > 0 || 
				provincia.trim().length() > 0 ||
				telefono.trim().length() > 0 ||
				fax.trim().length() > 0)]]></param>
			<message key="localstrings.requiredstring" />
		</field-validator>
	</field>

	<field name="telefono">
		<field-validator type="regex" short-circuit="true">
			<param name="expression"><![CDATA[[0-9 ]+]]></param>
			<message key="localstrings.wrongCharacters" />
		</field-validator>
	</field>

	<field name="fax">
		<field-validator type="regex">
			<param name="expression"><![CDATA[[0-9]+]]></param>
			<message key="localstrings.wrongCharacters" />
		</field-validator>
	</field>

</validators>